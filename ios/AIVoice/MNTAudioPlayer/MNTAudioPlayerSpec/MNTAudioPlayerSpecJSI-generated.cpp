/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "MNTAudioPlayerSpecJSI.h"

namespace facebook {
namespace react {

static jsi::Value __hostFunction_NativeAudioPlayerCxxSpecJSI_getCurrentState(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAudioPlayerCxxSpecJSI *>(&turboModule)->getCurrentState(
    rt
  );
}
static jsi::Value __hostFunction_NativeAudioPlayerCxxSpecJSI_pausePlaying(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeAudioPlayerCxxSpecJSI *>(&turboModule)->pausePlaying(
    rt
  );
}
static jsi::Value __hostFunction_NativeAudioPlayerCxxSpecJSI_rewindPlayingToTime(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAudioPlayerCxxSpecJSI *>(&turboModule)->rewindPlayingToTime(
    rt,
    args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAudioPlayerCxxSpecJSI_setToPlayFile(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAudioPlayerCxxSpecJSI *>(&turboModule)->setToPlayFile(
    rt,
    args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAudioPlayerCxxSpecJSI_startPlayingFromTime(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAudioPlayerCxxSpecJSI *>(&turboModule)->startPlayingFromTime(
    rt,
    args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAudioPlayerCxxSpecJSI_stopPlaying(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAudioPlayerCxxSpecJSI *>(&turboModule)->stopPlaying(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAudioPlayerCxxSpecJSI_addListener(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAudioPlayerCxxSpecJSI *>(&turboModule)->addListener(
    rt,
    args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeAudioPlayerCxxSpecJSI_removeListeners(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeAudioPlayerCxxSpecJSI *>(&turboModule)->removeListeners(
    rt,
    args[0].asNumber()
  );
  return jsi::Value::undefined();
}

NativeAudioPlayerCxxSpecJSI::NativeAudioPlayerCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("MNTAudioPlayerManager", jsInvoker) {
  methodMap_["getCurrentState"] = MethodMetadata {0, __hostFunction_NativeAudioPlayerCxxSpecJSI_getCurrentState};
  methodMap_["pausePlaying"] = MethodMetadata {0, __hostFunction_NativeAudioPlayerCxxSpecJSI_pausePlaying};
  methodMap_["rewindPlayingToTime"] = MethodMetadata {1, __hostFunction_NativeAudioPlayerCxxSpecJSI_rewindPlayingToTime};
  methodMap_["setToPlayFile"] = MethodMetadata {1, __hostFunction_NativeAudioPlayerCxxSpecJSI_setToPlayFile};
  methodMap_["startPlayingFromTime"] = MethodMetadata {1, __hostFunction_NativeAudioPlayerCxxSpecJSI_startPlayingFromTime};
  methodMap_["stopPlaying"] = MethodMetadata {0, __hostFunction_NativeAudioPlayerCxxSpecJSI_stopPlaying};
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeAudioPlayerCxxSpecJSI_addListener};
  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeAudioPlayerCxxSpecJSI_removeListeners};
}


} // namespace react
} // namespace facebook
